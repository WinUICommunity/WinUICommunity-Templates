<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:iNKORE.UI.WPF.Modern"
                    xmlns:primitives="clr-namespace:iNKORE.UI.WPF.Modern"
                    xmlns:root="clr-namespace:iNKORE.UI.WPF.Modern">

    <Style x:Key="TitleBarBackButtonStyle"
           TargetType="primitives:TitleBarButton">
        <Setter Property="Background" Value="{DynamicResource AccentButtonBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource AccentButtonForeground}" />
        <Setter Property="HoverBackground" Value="{DynamicResource AccentButtonBackgroundPointerOver}" />
        <Setter Property="HoverForeground" Value="{DynamicResource AccentButtonForegroundPointerOver}" />
        <Setter Property="PressedBackground" Value="{DynamicResource AccentButtonBackgroundPressed}" />
        <Setter Property="PressedForeground" Value="{DynamicResource AccentButtonForegroundPressed}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Width" Value="48" />
        <Setter Property="Content" Value="M 20 10 L 3.828125 10 L 10.410156 16.582031 L 9 18 L 0 9 L 9 0 L 10.410156 1.416016 L 3.828125 8 L 20 8 Z" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <local:FontIconFallback Data="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <WindowChrome x:Key="DefaultWindowChrome"
                  x:Shared="False"
                  CaptionHeight="{DynamicResource {x:Static local:TitleBar.HeightKey}}"
                  NonClientFrameEdges="None"
                  ResizeBorderThickness="4"
                  UseAeroCaptionButtons="False" />

    <WindowChrome x:Key="AeroWindowChrome"
                  x:Shared="False"
                  CaptionHeight="{DynamicResource {x:Static local:TitleBar.HeightKey}}"
                  GlassFrameThickness="-1"
                  NonClientFrameEdges="None"
                  ResizeBorderThickness="4"
                  UseAeroCaptionButtons="False" />

    <WindowChrome x:Key="AcrylicWindowChrome"
                  x:Shared="False"
                  CaptionHeight="{DynamicResource {x:Static local:TitleBar.HeightKey}}"
                  GlassFrameThickness="0,1,0,0"
                  NonClientFrameEdges="None"
                  ResizeBorderThickness="4"
                  UseAeroCaptionButtons="False" />

    <Style x:Key="BaseWindowStyle"
           TargetType="Window">
        <Setter Property="Foreground" Value="{DynamicResource SystemControlPageTextBaseHighBrush}" />
        <Setter Property="Background" Value="{DynamicResource ApplicationPageBackgroundThemeBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource WindowBorder}" />
        <Setter Property="BorderThickness" Value="0.5" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="WindowChrome.WindowChrome" Value="{DynamicResource DefaultWindowChrome}" />
        <Setter Property="root:ThemeManager.IsThemeAware" Value="True" />
        <Setter Property="local:TitleBar.Background" Value="{DynamicResource ControlFillColorTransparentBrush}" />
        <Setter Property="local:TitleBar.Foreground" Value="{DynamicResource SystemControlForegroundBaseHighBrush}" />
        <Setter Property="local:TitleBar.InactiveBackground" Value="{DynamicResource ControlFillColorTransparentBrush}" />
        <Setter Property="local:TitleBar.InactiveForeground" Value="{DynamicResource SystemControlDisabledBaseMediumLowBrush}" />
        <Setter Property="local:TitleBar.BackButtonStyle" Value="{StaticResource TitleBarBackButtonStyle}" />
        <Setter Property="primitives:WindowHelper.FixMaximizedWindow" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Window">
                    <Border x:Name="LayoutRoot"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding primitives:ControlHelper.CornerRadius}"
                            SnapsToDevicePixels="True">
                        <Grid>
                            <Grid x:Name="ContentGrid">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <primitives:TitleBarControl Title="{TemplateBinding Title}"
                                                            Height="{TemplateBinding local:TitleBar.Height}"
                                                            Panel.ZIndex="1"
                                                            BackButtonCommand="{TemplateBinding local:TitleBar.BackButtonCommand}"
                                                            BackButtonCommandParameter="{TemplateBinding local:TitleBar.BackButtonCommandParameter}"
                                                            BackButtonCommandTarget="{TemplateBinding local:TitleBar.BackButtonCommandTarget}"
                                                            BackButtonStyle="{TemplateBinding local:TitleBar.BackButtonStyle}"
                                                            Background="{TemplateBinding local:TitleBar.Background}"
                                                            ButtonStyle="{TemplateBinding local:TitleBar.ButtonStyle}"
                                                            ExtendViewIntoTitleBar="{TemplateBinding local:TitleBar.ExtendViewIntoTitleBar}"
                                                            Foreground="{TemplateBinding local:TitleBar.Foreground}"
                                                            Icon="{TemplateBinding Icon}"
                                                            InactiveBackground="{TemplateBinding local:TitleBar.InactiveBackground}"
                                                            InactiveForeground="{TemplateBinding local:TitleBar.InactiveForeground}"
                                                            IsActive="{TemplateBinding IsActive}"
                                                            IsBackButtonVisible="{TemplateBinding local:TitleBar.IsBackButtonVisible}"
                                                            IsBackEnabled="{TemplateBinding local:TitleBar.IsBackEnabled}"
                                                            IsIconVisible="{TemplateBinding local:TitleBar.IsIconVisible}"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                            Style="{TemplateBinding local:TitleBar.Style}" />

                                <AdornerDecorator x:Name="AdornerDecorator"
                                                  Grid.Row="1">
                                    <local:ContentPresenterEx Foreground="{TemplateBinding Foreground}"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </AdornerDecorator>

                                <ResizeGrip x:Name="WindowResizeGrip"
                                            Grid.Row="1"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Bottom"
                                            IsTabStop="false"
                                            Visibility="Collapsed"
                                            WindowChrome.ResizeGripDirection="BottomRight" />
                            </Grid>

                            <Border x:Name="HighContrastBorder"
                                    BorderBrush="{DynamicResource {x:Static SystemColors.ActiveCaptionBrushKey}}"
                                    BorderThickness="7,1,7,7"
                                    IsHitTestVisible="False"
                                    Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Background" Value="Transparent">
                            <Setter TargetName="LayoutRoot" Property="BorderThickness" Value="0" />
                        </Trigger>
                        <Trigger Property="IsActive" Value="False">
                            <Setter TargetName="LayoutRoot" Property="BorderBrush" Value="{DynamicResource WindowBorderInactive}" />
                            <Setter TargetName="HighContrastBorder" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.InactiveCaptionBrushKey}}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}"
                                     Value="true">
                            <Setter TargetName="ContentGrid" Property="Margin" Value="7,0,7,7" />
                            <Setter TargetName="HighContrastBorder" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="LayoutRoot" Property="BorderThickness" Value="0" />
                            <Setter TargetName="ContentGrid" Property="Margin" Value="0" />
                            <Setter TargetName="HighContrastBorder" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="local:TitleBar.ExtendViewIntoTitleBar" Value="True">
                            <Setter TargetName="AdornerDecorator" Property="Grid.Row" Value="0" />
                            <Setter TargetName="AdornerDecorator" Property="Grid.RowSpan" Value="2" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                                <Condition Property="WindowState" Value="Normal" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="WindowChrome.WindowChrome" Value="{x:Null}">
                <Setter Property="primitives:WindowHelper.FixMaximizedWindow" Value="False" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DefaultWindowStyle"
           BasedOn="{StaticResource BaseWindowStyle}"
           TargetType="Window">
        <Setter Property="OverridesDefaultStyle" Value="True" />
    </Style>

    <Style x:Key="AeroWindowStyle"
           BasedOn="{StaticResource BaseWindowStyle}"
           TargetType="Window">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="WindowChrome.WindowChrome" Value="{DynamicResource AeroWindowChrome}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Window">
                    <Border x:Name="LayoutRoot"
                            Padding="{TemplateBinding Padding}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding primitives:ControlHelper.CornerRadius}"
                            SnapsToDevicePixels="True">
                        <Grid>
                            <Grid x:Name="Background">
                                <!--  Color tint overlay  -->
                                <Rectangle x:Name="TintColorLayer"
                                           Fill="{TemplateBinding Background}"
                                           Opacity="0.8" />
                                <!--  Tiled noise texture  -->
                                <Rectangle x:Name="NoiseLayer"
                                           Opacity="0.02">
                                    <Rectangle.Fill>
                                        <ImageBrush ImageSource="pack://application:,,,/WinUICommunity_VS_Templates;component/Materials/Acrylic/NoiseAsset_256X256_PNG.png"
                                                    Stretch="None"
                                                    TileMode="Tile"
                                                    Viewport="0,0,128,128"
                                                    ViewportUnits="Absolute" />
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Grid>

                            <Grid x:Name="ContentGrid">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <primitives:TitleBarControl Title="{TemplateBinding Title}"
                                                            Height="{TemplateBinding local:TitleBar.Height}"
                                                            Panel.ZIndex="1"
                                                            BackButtonCommand="{TemplateBinding local:TitleBar.BackButtonCommand}"
                                                            BackButtonCommandParameter="{TemplateBinding local:TitleBar.BackButtonCommandParameter}"
                                                            BackButtonCommandTarget="{TemplateBinding local:TitleBar.BackButtonCommandTarget}"
                                                            BackButtonStyle="{TemplateBinding local:TitleBar.BackButtonStyle}"
                                                            Background="{TemplateBinding local:TitleBar.Background}"
                                                            ButtonStyle="{TemplateBinding local:TitleBar.ButtonStyle}"
                                                            ExtendViewIntoTitleBar="{TemplateBinding local:TitleBar.ExtendViewIntoTitleBar}"
                                                            Foreground="{TemplateBinding local:TitleBar.Foreground}"
                                                            Icon="{TemplateBinding Icon}"
                                                            InactiveBackground="{TemplateBinding local:TitleBar.InactiveBackground}"
                                                            InactiveForeground="{TemplateBinding local:TitleBar.InactiveForeground}"
                                                            IsActive="{TemplateBinding IsActive}"
                                                            IsBackButtonVisible="{TemplateBinding local:TitleBar.IsBackButtonVisible}"
                                                            IsBackEnabled="{TemplateBinding local:TitleBar.IsBackEnabled}"
                                                            IsIconVisible="{TemplateBinding local:TitleBar.IsIconVisible}"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                            Style="{TemplateBinding local:TitleBar.Style}" />

                                <AdornerDecorator x:Name="AdornerDecorator"
                                                  Grid.Row="1">
                                    <local:ContentPresenterEx Foreground="{TemplateBinding Foreground}"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </AdornerDecorator>

                                <ResizeGrip x:Name="WindowResizeGrip"
                                            Grid.Row="1"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Bottom"
                                            IsTabStop="false"
                                            Visibility="Collapsed"
                                            WindowChrome.ResizeGripDirection="BottomRight" />
                            </Grid>

                            <Border x:Name="HighContrastBorder"
                                    BorderBrush="{DynamicResource {x:Static SystemColors.ActiveCaptionBrushKey}}"
                                    BorderThickness="7,1,7,7"
                                    IsHitTestVisible="False"
                                    Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Background" Value="Transparent">
                            <Setter TargetName="LayoutRoot" Property="BorderThickness" Value="0" />
                        </Trigger>
                        <Trigger Property="IsActive" Value="False">
                            <Setter TargetName="LayoutRoot" Property="BorderBrush" Value="{DynamicResource WindowBorderInactive}" />
                            <Setter TargetName="HighContrastBorder" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.InactiveCaptionBrushKey}}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}"
                                     Value="true">
                            <Setter TargetName="ContentGrid" Property="Margin" Value="7,0,7,7" />
                            <Setter TargetName="HighContrastBorder" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="LayoutRoot" Property="BorderThickness" Value="0" />
                            <Setter TargetName="ContentGrid" Property="Margin" Value="0" />
                            <Setter TargetName="HighContrastBorder" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="local:TitleBar.ExtendViewIntoTitleBar" Value="True">
                            <Setter TargetName="AdornerDecorator" Property="Grid.Row" Value="0" />
                            <Setter TargetName="AdornerDecorator" Property="Grid.RowSpan" Value="2" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                                <Condition Property="WindowState" Value="Normal" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AcrylicWindowStyle"
           BasedOn="{StaticResource BaseWindowStyle}"
           TargetType="Window">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="WindowChrome.WindowChrome" Value="{DynamicResource AcrylicWindowChrome}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Window">
                    <Border x:Name="LayoutRoot"
                            Padding="{TemplateBinding Padding}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding primitives:ControlHelper.CornerRadius}"
                            SnapsToDevicePixels="True">
                        <Grid>
                            <Grid x:Name="ContentGrid">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <primitives:TitleBarControl Title="{TemplateBinding Title}"
                                                            Height="{TemplateBinding local:TitleBar.Height}"
                                                            Panel.ZIndex="1"
                                                            BackButtonCommand="{TemplateBinding local:TitleBar.BackButtonCommand}"
                                                            BackButtonCommandParameter="{TemplateBinding local:TitleBar.BackButtonCommandParameter}"
                                                            BackButtonCommandTarget="{TemplateBinding local:TitleBar.BackButtonCommandTarget}"
                                                            BackButtonStyle="{TemplateBinding local:TitleBar.BackButtonStyle}"
                                                            Background="{TemplateBinding local:TitleBar.Background}"
                                                            ButtonStyle="{TemplateBinding local:TitleBar.ButtonStyle}"
                                                            ExtendViewIntoTitleBar="{TemplateBinding local:TitleBar.ExtendViewIntoTitleBar}"
                                                            Foreground="{TemplateBinding local:TitleBar.Foreground}"
                                                            Icon="{TemplateBinding Icon}"
                                                            InactiveBackground="{TemplateBinding local:TitleBar.InactiveBackground}"
                                                            InactiveForeground="{TemplateBinding local:TitleBar.InactiveForeground}"
                                                            IsActive="{TemplateBinding IsActive}"
                                                            IsBackButtonVisible="{TemplateBinding local:TitleBar.IsBackButtonVisible}"
                                                            IsBackEnabled="{TemplateBinding local:TitleBar.IsBackEnabled}"
                                                            IsIconVisible="{TemplateBinding local:TitleBar.IsIconVisible}"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                            Style="{TemplateBinding local:TitleBar.Style}" />

                                <AdornerDecorator x:Name="AdornerDecorator"
                                                  Grid.Row="1">
                                    <local:ContentPresenterEx Foreground="{TemplateBinding Foreground}"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </AdornerDecorator>

                                <ResizeGrip x:Name="WindowResizeGrip"
                                            Grid.Row="1"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Bottom"
                                            IsTabStop="false"
                                            Visibility="Collapsed"
                                            WindowChrome.ResizeGripDirection="BottomRight" />
                            </Grid>

                            <Border x:Name="HighContrastBorder"
                                    BorderBrush="{DynamicResource {x:Static SystemColors.ActiveCaptionBrushKey}}"
                                    BorderThickness="7,1,7,7"
                                    IsHitTestVisible="False"
                                    Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Background" Value="Transparent">
                            <Setter TargetName="LayoutRoot" Property="BorderThickness" Value="0" />
                        </Trigger>
                        <Trigger Property="IsActive" Value="False">
                            <Setter TargetName="LayoutRoot" Property="BorderBrush" Value="{DynamicResource WindowBorderInactive}" />
                            <Setter TargetName="HighContrastBorder" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.InactiveCaptionBrushKey}}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}"
                                     Value="true">
                            <Setter TargetName="ContentGrid" Property="Margin" Value="7,0,7,7" />
                            <Setter TargetName="HighContrastBorder" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="LayoutRoot" Property="BorderThickness" Value="0" />
                            <Setter TargetName="ContentGrid" Property="Margin" Value="0" />
                            <Setter TargetName="HighContrastBorder" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="local:TitleBar.ExtendViewIntoTitleBar" Value="True">
                            <Setter TargetName="AdornerDecorator" Property="Grid.Row" Value="0" />
                            <Setter TargetName="AdornerDecorator" Property="Grid.RowSpan" Value="2" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                                <Condition Property="WindowState" Value="Normal" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MicaWindowStyle"
           BasedOn="{StaticResource BaseWindowStyle}"
           TargetType="Window">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="WindowChrome.WindowChrome" Value="{DynamicResource AeroWindowChrome}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Window">
                    <Border x:Name="LayoutRoot"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding primitives:ControlHelper.CornerRadius}"
                            SnapsToDevicePixels="True">
                        <Grid>
                            <Grid x:Name="ContentGrid">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <primitives:TitleBarControl Title="{TemplateBinding Title}"
                                                            Height="{TemplateBinding local:TitleBar.Height}"
                                                            Panel.ZIndex="1"
                                                            BackButtonCommand="{TemplateBinding local:TitleBar.BackButtonCommand}"
                                                            BackButtonCommandParameter="{TemplateBinding local:TitleBar.BackButtonCommandParameter}"
                                                            BackButtonCommandTarget="{TemplateBinding local:TitleBar.BackButtonCommandTarget}"
                                                            BackButtonStyle="{TemplateBinding local:TitleBar.BackButtonStyle}"
                                                            Background="{TemplateBinding local:TitleBar.Background}"
                                                            ButtonStyle="{TemplateBinding local:TitleBar.ButtonStyle}"
                                                            ExtendViewIntoTitleBar="{TemplateBinding local:TitleBar.ExtendViewIntoTitleBar}"
                                                            Foreground="{TemplateBinding local:TitleBar.Foreground}"
                                                            Icon="{TemplateBinding Icon}"
                                                            InactiveBackground="{TemplateBinding local:TitleBar.InactiveBackground}"
                                                            InactiveForeground="{TemplateBinding local:TitleBar.InactiveForeground}"
                                                            IsActive="{TemplateBinding IsActive}"
                                                            IsBackButtonVisible="{TemplateBinding local:TitleBar.IsBackButtonVisible}"
                                                            IsBackEnabled="{TemplateBinding local:TitleBar.IsBackEnabled}"
                                                            IsIconVisible="{TemplateBinding local:TitleBar.IsIconVisible}"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                            Style="{TemplateBinding local:TitleBar.Style}" />

                                <AdornerDecorator x:Name="AdornerDecorator"
                                                  Grid.Row="1">
                                    <local:ContentPresenterEx Foreground="{TemplateBinding Foreground}"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </AdornerDecorator>

                                <ResizeGrip x:Name="WindowResizeGrip"
                                            Grid.Row="1"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Bottom"
                                            IsTabStop="false"
                                            Visibility="Collapsed"
                                            WindowChrome.ResizeGripDirection="BottomRight" />
                            </Grid>

                            <Border x:Name="HighContrastBorder"
                                    BorderBrush="{DynamicResource {x:Static SystemColors.ActiveCaptionBrushKey}}"
                                    BorderThickness="7,1,7,7"
                                    IsHitTestVisible="False"
                                    Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Background" Value="Transparent">
                            <Setter TargetName="LayoutRoot" Property="BorderThickness" Value="0" />
                        </Trigger>
                        <Trigger Property="IsActive" Value="False">
                            <Setter TargetName="LayoutRoot" Property="BorderBrush" Value="{DynamicResource WindowBorderInactive}" />
                            <Setter TargetName="HighContrastBorder" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.InactiveCaptionBrushKey}}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}"
                                     Value="true">
                            <Setter TargetName="ContentGrid" Property="Margin" Value="7,0,7,7" />
                            <Setter TargetName="HighContrastBorder" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="LayoutRoot" Property="BorderThickness" Value="0" />
                            <Setter TargetName="ContentGrid" Property="Margin" Value="0" />
                            <Setter TargetName="HighContrastBorder" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="local:TitleBar.ExtendViewIntoTitleBar" Value="True">
                            <Setter TargetName="AdornerDecorator" Property="Grid.Row" Value="0" />
                            <Setter TargetName="AdornerDecorator" Property="Grid.RowSpan" Value="2" />
                        </Trigger>
                        <Trigger Property="primitives:WindowHelper.SystemBackdropType" Value="Acrylic">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource ControlFillColorTransparentBrush}" />
                        </Trigger>
                        <Trigger Property="primitives:WindowHelper.SystemBackdropType" Value="Mica">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource ControlFillColorTransparentBrush}" />
                        </Trigger>
                        <Trigger Property="primitives:WindowHelper.SystemBackdropType" Value="Tabbed">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource ControlFillColorTransparentBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                                <Condition Property="WindowState" Value="Normal" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SnapWindowStyle"
           BasedOn="{StaticResource BaseWindowStyle}"
           TargetType="Window">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="WindowChrome.WindowChrome" Value="{DynamicResource AeroWindowChrome}" />
    </Style>

    <Style BasedOn="{StaticResource DefaultWindowStyle}"
           TargetType="Window" />

</ResourceDictionary>