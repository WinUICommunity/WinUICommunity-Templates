<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:iNKORE.UI.WPF.Modern"
                    xmlns:primitives="clr-namespace:iNKORE.UI.WPF.Modern">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Button.xaml" />
        <ResourceDictionary Source="TextBox.xaml" />
        <ResourceDictionary Source="CheckBox.xaml" />
        <ResourceDictionary Source="RadioButton.xaml" />
        <ResourceDictionary Source="ToggleButton.xaml" />
        <ResourceDictionary>
            <primitives:CornerRadiusFilterConverter x:Key="TopLeftCornerRadiusDoubleValueConverter"
                                                    Filter="TopLeftValue" />
            <primitives:CornerRadiusFilterConverter x:Key="BottomRightCornerRadiusDoubleValueConverter"
                                                    Filter="BottomRightValue" />
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="{x:Static ToolBar.ButtonStyleKey}"
           BasedOn="{StaticResource DefaultButtonStyle}"
           TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource ToolBarButtonBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource ToolBarButtonForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ToolBarButtonBorderBrush}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="MinWidth" Value="68" />
        <Setter Property="primitives:FocusVisualHelper.FocusVisualMargin" Value="-3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="Root"
                          MinWidth="{TemplateBinding MinWidth}"
                          MaxWidth="{TemplateBinding MaxWidth}"
                          Background="{TemplateBinding Background}"
                          SnapsToDevicePixels="True">
                        <Border x:Name="ToolBarButtonInnerBorder"
                                Margin="{DynamicResource ToolBarButtonInnerBorderMargin}"
                                primitives:FocusVisualHelper.IsTemplateFocusTarget="True"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding primitives:ControlHelper.CornerRadius}" />

                        <Grid x:Name="ContentRoot"
                              MinHeight="{DynamicResource ToolBarThemeCompactHeight}">
                            <local:ContentPresenterEx x:Name="ContentPresenter"
                                                      Margin="{DynamicResource ToolBarButtonTextLabelMargin}"
                                                      HorizontalAlignment="Center"
                                                      Focusable="False"
                                                      FontFamily="{TemplateBinding FontFamily}"
                                                      FontSize="12"
                                                      Foreground="{TemplateBinding Foreground}"
                                                      RecognizesAccessKey="True"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                      TextWrapping="Wrap" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ToolBarButtonInnerBorder" Property="Background" Value="{DynamicResource ToolBarButtonBackgroundPointerOver}" />
                            <Setter TargetName="ToolBarButtonInnerBorder" Property="BorderBrush" Value="{DynamicResource ToolBarButtonBorderBrushPointerOver}" />
                            <Setter Property="Foreground" Value="{DynamicResource ToolBarButtonForegroundPointerOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ToolBarButtonInnerBorder" Property="Background" Value="{DynamicResource ToolBarButtonBackgroundPressed}" />
                            <Setter TargetName="ToolBarButtonInnerBorder" Property="BorderBrush" Value="{DynamicResource ToolBarButtonBorderBrushPressed}" />
                            <Setter Property="Foreground" Value="{DynamicResource ToolBarButtonForegroundPressed}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ToolBarButtonInnerBorder" Property="Background" Value="{DynamicResource ToolBarButtonBackgroundDisabled}" />
                            <Setter TargetName="ToolBarButtonInnerBorder" Property="BorderBrush" Value="{DynamicResource ToolBarButtonBorderBrushDisabled}" />
                            <Setter Property="Foreground" Value="{DynamicResource ToolBarButtonForegroundDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}"
           BasedOn="{StaticResource DefaultToggleButtonStyle}"
           TargetType="ToggleButton">
        <Setter Property="Background" Value="{DynamicResource ToolBarButtonBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource ToolBarButtonForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ToolBarButtonBorderBrush}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="MinWidth" Value="68" />
        <Setter Property="primitives:FocusVisualHelper.FocusVisualMargin" Value="-3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid x:Name="Root"
                          MinWidth="{TemplateBinding MinWidth}"
                          MaxWidth="{TemplateBinding MaxWidth}"
                          Background="{TemplateBinding Background}"
                          SnapsToDevicePixels="True">
                        <Border x:Name="ToolBarToggleButtonInnerBackground"
                                Margin="{DynamicResource AppBarButtonInnerBorderMargin}"
                                primitives:FocusVisualHelper.IsTemplateFocusTarget="True"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding primitives:ControlHelper.CornerRadius}">
                            <Border x:Name="ToolBarToggleButtonInnerBorder"
                                    CornerRadius="{TemplateBinding primitives:ControlHelper.CornerRadius}" />
                        </Border>

                        <Grid x:Name="ContentRoot"
                              MinHeight="{DynamicResource ToolBarThemeCompactHeight}">
                            <local:ContentPresenterEx x:Name="ContentPresenter"
                                                      Margin="{DynamicResource ToolBarButtonTextLabelMargin}"
                                                      HorizontalAlignment="Center"
                                                      Focusable="False"
                                                      FontFamily="{TemplateBinding FontFamily}"
                                                      FontSize="12"
                                                      Foreground="{TemplateBinding Foreground}"
                                                      RecognizesAccessKey="True"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                      TextWrapping="Wrap" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ToolBarToggleButtonInnerBackground" Property="Background" Value="{DynamicResource ToolBarButtonBackgroundPointerOver}" />
                            <Setter TargetName="ToolBarToggleButtonInnerBackground" Property="BorderBrush" Value="{DynamicResource ToolBarButtonBorderBrushPointerOver}" />
                            <Setter Property="Foreground" Value="{DynamicResource ToolBarButtonForegroundPointerOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ToolBarToggleButtonInnerBackground" Property="Background" Value="{DynamicResource ToolBarButtonBackgroundPressed}" />
                            <Setter TargetName="ToolBarToggleButtonInnerBackground" Property="BorderBrush" Value="{DynamicResource ToolBarButtonBorderBrushPressed}" />
                            <Setter Property="Foreground" Value="{DynamicResource ToolBarButtonForegroundPressed}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ToolBarToggleButtonInnerBackground" Property="Background" Value="{DynamicResource ToolBarButtonBackgroundDisabled}" />
                            <Setter TargetName="ToolBarToggleButtonInnerBackground" Property="BorderBrush" Value="{DynamicResource ToolBarButtonBorderBrushDisabled}" />
                            <Setter Property="Foreground" Value="{DynamicResource ToolBarButtonForegroundDisabled}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ToolBarToggleButtonInnerBackground" Property="BorderThickness" Value="0" />
                            <Setter TargetName="ToolBarToggleButtonInnerBackground" Property="BorderBrush" Value="{DynamicResource ControlFillColorTransparentBrush}" />
                            <Setter TargetName="ToolBarToggleButtonInnerBorder" Property="BorderThickness" Value="{DynamicResource ToolBarButtonBorderThemeThickness}" />
                            <Setter TargetName="ToolBarToggleButtonInnerBackground" Property="Background" Value="{DynamicResource ToolBarButtonBackgroundSelected}" />
                            <Setter TargetName="ToolBarToggleButtonInnerBorder" Property="BorderBrush" Value="{DynamicResource ToolBarButtonBorderBrushSelected}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ToolBarToggleButtonInnerBackground" Property="Background" Value="{DynamicResource ToolBarButtonBackgroundSelectedPointerOver}" />
                            <Setter TargetName="ToolBarToggleButtonInnerBorder" Property="BorderBrush" Value="{DynamicResource ToolBarButtonBorderBrushSelectedPointerOver}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ToolBarToggleButtonInnerBackground" Property="Background" Value="{DynamicResource ToolBarButtonBackgroundSelectedPressed}" />
                            <Setter TargetName="ToolBarToggleButtonInnerBorder" Property="BorderBrush" Value="{DynamicResource ToolBarButtonBorderBrushSelectedPressed}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ToolBarToggleButtonInnerBackground" Property="Background" Value="{DynamicResource ToolBarButtonBackgroundSelectedDisabled}" />
                            <Setter TargetName="ToolBarToggleButtonInnerBorder" Property="BorderBrush" Value="{DynamicResource ToolBarButtonBorderBrushSelectedDisabled}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static ToolBar.CheckBoxStyleKey}"
           BasedOn="{StaticResource DefaultCheckBoxStyle}"
           TargetType="CheckBox">
        <Setter Property="Background" Value="{DynamicResource ToolBarButtonBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource ToolBarButtonForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ToolBarButtonBorderBrush}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="MinWidth" Value="68" />
        <Setter Property="primitives:FocusVisualHelper.FocusVisualMargin" Value="-3" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="{DynamicResource ButtonPadding}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid x:Name="Root"
                          MinWidth="{TemplateBinding MinWidth}"
                          MaxWidth="{TemplateBinding MaxWidth}"
                          Background="{TemplateBinding Background}"
                          SnapsToDevicePixels="True">
                        <Border x:Name="ToolBarToggleButtonInnerBackground"
                                Margin="{DynamicResource AppBarButtonInnerBorderMargin}"
                                primitives:FocusVisualHelper.IsTemplateFocusTarget="True"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding primitives:ControlHelper.CornerRadius}">
                            <Border x:Name="ToolBarToggleButtonInnerBorder"
                                    CornerRadius="{TemplateBinding primitives:ControlHelper.CornerRadius}" />
                        </Border>

                        <Grid x:Name="ContentRoot"
                              MinHeight="{DynamicResource ToolBarThemeCompactHeight}">
                            <local:ContentPresenterEx x:Name="ContentPresenter"
                                                      Margin="{DynamicResource ToolBarButtonTextLabelMargin}"
                                                      HorizontalAlignment="Center"
                                                      Focusable="False"
                                                      FontFamily="{TemplateBinding FontFamily}"
                                                      FontSize="12"
                                                      Foreground="{TemplateBinding Foreground}"
                                                      RecognizesAccessKey="True"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                      TextWrapping="Wrap" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ToolBarToggleButtonInnerBackground" Property="Background" Value="{DynamicResource ToolBarButtonBackgroundPointerOver}" />
                            <Setter TargetName="ToolBarToggleButtonInnerBackground" Property="BorderBrush" Value="{DynamicResource ToolBarButtonBorderBrushPointerOver}" />
                            <Setter Property="Foreground" Value="{DynamicResource ToolBarButtonForegroundPointerOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ToolBarToggleButtonInnerBackground" Property="Background" Value="{DynamicResource ToolBarButtonBackgroundPressed}" />
                            <Setter TargetName="ToolBarToggleButtonInnerBackground" Property="BorderBrush" Value="{DynamicResource ToolBarButtonBorderBrushPressed}" />
                            <Setter Property="Foreground" Value="{DynamicResource ToolBarButtonForegroundPressed}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ToolBarToggleButtonInnerBackground" Property="Background" Value="{DynamicResource ToolBarButtonBackgroundDisabled}" />
                            <Setter TargetName="ToolBarToggleButtonInnerBackground" Property="BorderBrush" Value="{DynamicResource ToolBarButtonBorderBrushDisabled}" />
                            <Setter Property="Foreground" Value="{DynamicResource ToolBarButtonForegroundDisabled}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ToolBarToggleButtonInnerBackground" Property="BorderThickness" Value="0" />
                            <Setter TargetName="ToolBarToggleButtonInnerBackground" Property="BorderBrush" Value="{DynamicResource ControlFillColorTransparentBrush}" />
                            <Setter TargetName="ToolBarToggleButtonInnerBorder" Property="BorderThickness" Value="{DynamicResource ToolBarButtonBorderThemeThickness}" />
                            <Setter TargetName="ToolBarToggleButtonInnerBackground" Property="Background" Value="{DynamicResource ToolBarButtonBackgroundSelected}" />
                            <Setter TargetName="ToolBarToggleButtonInnerBorder" Property="BorderBrush" Value="{DynamicResource ToolBarButtonBorderBrushSelected}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ToolBarToggleButtonInnerBackground" Property="Background" Value="{DynamicResource ToolBarButtonBackgroundSelectedPointerOver}" />
                            <Setter TargetName="ToolBarToggleButtonInnerBorder" Property="BorderBrush" Value="{DynamicResource ToolBarButtonBorderBrushSelectedPointerOver}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ToolBarToggleButtonInnerBackground" Property="Background" Value="{DynamicResource ToolBarButtonBackgroundSelectedPressed}" />
                            <Setter TargetName="ToolBarToggleButtonInnerBorder" Property="BorderBrush" Value="{DynamicResource ToolBarButtonBorderBrushSelectedPressed}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ToolBarToggleButtonInnerBackground" Property="Background" Value="{DynamicResource ToolBarButtonBackgroundSelectedDisabled}" />
                            <Setter TargetName="ToolBarToggleButtonInnerBorder" Property="BorderBrush" Value="{DynamicResource ToolBarButtonBorderBrushSelectedDisabled}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}"
           BasedOn="{StaticResource DefaultRadioButtonStyle}"
           TargetType="RadioButton">
        <Setter Property="Background" Value="{DynamicResource ToolBarButtonBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource ToolBarButtonForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ToolBarButtonBorderBrush}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="MinWidth" Value="68" />
        <Setter Property="primitives:FocusVisualHelper.FocusVisualMargin" Value="-3" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="{DynamicResource ButtonPadding}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid x:Name="Root"
                          MinWidth="{TemplateBinding MinWidth}"
                          MaxWidth="{TemplateBinding MaxWidth}"
                          Background="{TemplateBinding Background}"
                          SnapsToDevicePixels="True">
                        <Border x:Name="ToolBarToggleButtonInnerBackground"
                                Margin="{DynamicResource AppBarButtonInnerBorderMargin}"
                                primitives:FocusVisualHelper.IsTemplateFocusTarget="True"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding primitives:ControlHelper.CornerRadius}">
                            <Border x:Name="ToolBarToggleButtonInnerBorder"
                                    CornerRadius="{TemplateBinding primitives:ControlHelper.CornerRadius}" />
                        </Border>

                        <Grid x:Name="ContentRoot"
                              MinHeight="{DynamicResource ToolBarThemeCompactHeight}">
                            <local:ContentPresenterEx x:Name="ContentPresenter"
                                                      Margin="{DynamicResource ToolBarButtonTextLabelMargin}"
                                                      HorizontalAlignment="Center"
                                                      Focusable="False"
                                                      FontFamily="{TemplateBinding FontFamily}"
                                                      FontSize="12"
                                                      Foreground="{TemplateBinding Foreground}"
                                                      RecognizesAccessKey="True"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                      TextWrapping="Wrap" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ToolBarToggleButtonInnerBackground" Property="Background" Value="{DynamicResource ToolBarButtonBackgroundPointerOver}" />
                            <Setter TargetName="ToolBarToggleButtonInnerBackground" Property="BorderBrush" Value="{DynamicResource ToolBarButtonBorderBrushPointerOver}" />
                            <Setter Property="Foreground" Value="{DynamicResource ToolBarButtonForegroundPointerOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ToolBarToggleButtonInnerBackground" Property="Background" Value="{DynamicResource ToolBarButtonBackgroundPressed}" />
                            <Setter TargetName="ToolBarToggleButtonInnerBackground" Property="BorderBrush" Value="{DynamicResource ToolBarButtonBorderBrushPressed}" />
                            <Setter Property="Foreground" Value="{DynamicResource ToolBarButtonForegroundPressed}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ToolBarToggleButtonInnerBackground" Property="Background" Value="{DynamicResource ToolBarButtonBackgroundDisabled}" />
                            <Setter TargetName="ToolBarToggleButtonInnerBackground" Property="BorderBrush" Value="{DynamicResource ToolBarButtonBorderBrushDisabled}" />
                            <Setter Property="Foreground" Value="{DynamicResource ToolBarButtonForegroundDisabled}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ToolBarToggleButtonInnerBackground" Property="BorderThickness" Value="0" />
                            <Setter TargetName="ToolBarToggleButtonInnerBackground" Property="BorderBrush" Value="{DynamicResource ControlFillColorTransparentBrush}" />
                            <Setter TargetName="ToolBarToggleButtonInnerBorder" Property="BorderThickness" Value="{DynamicResource ToolBarButtonBorderThemeThickness}" />
                            <Setter TargetName="ToolBarToggleButtonInnerBackground" Property="Background" Value="{DynamicResource ToolBarButtonBackgroundSelected}" />
                            <Setter TargetName="ToolBarToggleButtonInnerBorder" Property="BorderBrush" Value="{DynamicResource ToolBarButtonBorderBrushSelected}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ToolBarToggleButtonInnerBackground" Property="Background" Value="{DynamicResource ToolBarButtonBackgroundSelectedPointerOver}" />
                            <Setter TargetName="ToolBarToggleButtonInnerBorder" Property="BorderBrush" Value="{DynamicResource ToolBarButtonBorderBrushSelectedPointerOver}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ToolBarToggleButtonInnerBackground" Property="Background" Value="{DynamicResource ToolBarButtonBackgroundSelectedPressed}" />
                            <Setter TargetName="ToolBarToggleButtonInnerBorder" Property="BorderBrush" Value="{DynamicResource ToolBarButtonBorderBrushSelectedPressed}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ToolBarToggleButtonInnerBackground" Property="Background" Value="{DynamicResource ToolBarButtonBackgroundSelectedDisabled}" />
                            <Setter TargetName="ToolBarToggleButtonInnerBorder" Property="BorderBrush" Value="{DynamicResource ToolBarButtonBorderBrushSelectedDisabled}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static ToolBar.TextBoxStyleKey}"
           BasedOn="{StaticResource DefaultTextBoxStyle}"
           TargetType="{x:Type TextBox}" />

    <Style x:Key="ToolBarThumbStyle"
           TargetType="Thumb">
        <Setter Property="Foreground" Value="{DynamicResource ToolBarSeparatorForeground}" />
        <Setter Property="Padding" Value="{DynamicResource ToolBarSeparatorMargin}" />
        <Setter Property="Cursor" Value="SizeAll" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Grid x:Name="RootGrid"
                          Background="Transparent">
                        <Rectangle x:Name="SeparatorRectangle"
                                   Width="{DynamicResource ToolBarSeparatorWidth}"
                                   Margin="{TemplateBinding Padding}"
                                   VerticalAlignment="Stretch"
                                   Fill="{TemplateBinding Foreground}"
                                   RadiusX="{DynamicResource ToolBarSeparatorCornerRadius}"
                                   RadiusY="{DynamicResource ToolBarSeparatorCornerRadius}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolBarOverflowButtonStyle"
           BasedOn="{StaticResource DefaultToggleButtonStyle}"
           TargetType="ToggleButton">
        <Setter Property="Background" Value="{DynamicResource ToolBarButtonBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource ToolBarButtonForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ToolBarButtonBorderBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="Width" Value="{DynamicResource ToolBarExpandButtonThemeWidth}" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="primitives:FocusVisualHelper.UseSystemFocusVisuals" Value="{DynamicResource UseSystemFocusVisuals}" />
        <Setter Property="primitives:FocusVisualHelper.FocusVisualMargin" Value="-3" />
        <Setter Property="primitives:ControlHelper.CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="Border"
                            Margin="{DynamicResource ToolBarEllipsisButtonInnerBorderMargin}"
                            Padding="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding primitives:ControlHelper.CornerRadius}"
                            SnapsToDevicePixels="True">
                        <local:ContentPresenterEx x:Name="ContentPresenter"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ToolBarButtonBackgroundPointerOver}" />
                            <Setter Property="Foreground" Value="{DynamicResource ToolBarButtonForegroundPointerOver}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ToolBarButtonBorderBrushPointerOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ToolBarButtonBackgroundPressed}" />
                            <Setter Property="Foreground" Value="{DynamicResource ToolBarButtonForegroundPressed}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ToolBarButtonBorderBrushPressed}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ToolBarButtonBackgroundDisabled}" />
                            <Setter Property="Foreground" Value="{DynamicResource ToolBarButtonForegroundDisabled}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ToolBarButtonBorderBrushDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ToolBar}"
           TargetType="ToolBar">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{DynamicResource ToolBarBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource ToolBarForeground}" />
        <Setter Property="Padding" Value="4,0,0,0" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="primitives:ControlHelper.CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolBar">
                    <Grid x:Name="LayoutRoot"
                          SnapsToDevicePixels="True">
                        <Border x:Name="ContentRoot"
                                Height="{TemplateBinding Height}"
                                MinHeight="{DynamicResource ToolBarThemeCompactHeight}"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="Top"
                                Background="{TemplateBinding Background}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto"
                                                      MinWidth="{DynamicResource ToolBarMoreButtonColumnMinWidth}" />
                                </Grid.ColumnDefinitions>
                                <Thumb x:Name="ToolBarThumb"
                                       Width="10"
                                       Style="{StaticResource ToolBarThumbStyle}" />
                                <ToolBarPanel x:Name="PART_ToolBarPanel"
                                              Grid.Column="1"
                                              MinHeight="{DynamicResource ToolBarThemeCompactHeight}"
                                              HorizontalAlignment="Left"
                                              IsItemsHost="true"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <ToggleButton x:Name="MoreButton"
                                              Grid.Column="2"
                                              MinHeight="{DynamicResource ToolBarThemeCompactHeight}"
                                              Padding="{DynamicResource ToolBarMoreButtonMargin}"
                                              VerticalAlignment="Top"
                                              ClickMode="Press"
                                              Foreground="{TemplateBinding Foreground}"
                                              IsChecked="{Binding Path=IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              IsEnabled="{TemplateBinding HasOverflowItems}"
                                              Style="{StaticResource ToolBarOverflowButtonStyle}">
                                    <local:FontIcon x:Name="EllipsisIcon"
                                                    Height="{DynamicResource ToolBarExpandButtonCircleDiameter}"
                                                    VerticalAlignment="Center"
                                                    FontFamily="{DynamicResource FluentSystemIcons}"
                                                    FontSize="20"
                                                    Glyph="&#xE827;" />
                                </ToggleButton>
                                <Popup x:Name="OverflowPopup"
                                       AllowsTransparency="True"
                                       Focusable="False"
                                       IsOpen="{Binding IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                       Placement="Bottom"
                                       PlacementTarget="{Binding ElementName=MoreButton}"
                                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                       StaysOpen="False">
                                    <Popup.PlacementRectangle>
                                        <MultiBinding>
                                            <MultiBinding.Converter>
                                                <primitives:PlacementRectangleConverter Margin="0,1,0,1" />
                                            </MultiBinding.Converter>
                                            <Binding ElementName="MoreButton"
                                                     Path="ActualWidth" />
                                            <Binding ElementName="MoreButton"
                                                     Path="ActualHeight" />
                                        </MultiBinding>
                                    </Popup.PlacementRectangle>
                                    <primitives:ThemeShadowChrome x:Name="OverflowContentRoot"
                                                                  MaxWidth="{DynamicResource ToolBarOverflowMaxWidth}"
                                                                  CornerRadius="{Binding ElementName=DropDownBorder, Path=CornerRadius}"
                                                                  IsShadowEnabled="{DynamicResource {x:Static SystemParameters.DropShadowKey}}"
                                                                  RenderOptions.ClearTypeHint="Enabled">
                                        <Border x:Name="DropDownBorder"
                                                Background="{DynamicResource ToolBarOverflowPresenterBackground}"
                                                BorderBrush="{DynamicResource ToolBarOverflowPresenterBorderBrush}"
                                                BorderThickness="{DynamicResource ToolBarOverflowPresenterBorderThickness}"
                                                CornerRadius="{DynamicResource OverlayCornerRadius}">
                                            <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel"
                                                                  Margin="0"
                                                                  FocusVisualStyle="{x:Null}"
                                                                  Focusable="True"
                                                                  KeyboardNavigation.DirectionalNavigation="Cycle"
                                                                  KeyboardNavigation.TabNavigation="Once"
                                                                  WrapWidth="200" />
                                        </Border>
                                    </primitives:ThemeShadowChrome>
                                </Popup>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsOverflowOpen" Value="true">
                            <Setter TargetName="ToolBarThumb" Property="IsEnabled" Value="false" />
                        </Trigger>
                        <Trigger Property="ToolBarTray.IsLocked" Value="true">
                            <Setter TargetName="ToolBarThumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ToolBarTray}"
           TargetType="ToolBarTray">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="0" />
    </Style>

</ResourceDictionary>