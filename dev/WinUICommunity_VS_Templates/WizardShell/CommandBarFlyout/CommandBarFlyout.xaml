<!--  Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT License. See LICENSE in the project root for license information.  -->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:iNKORE.UI.WPF.Modern"
                    xmlns:primitives="clr-namespace:iNKORE.UI.WPF.Modern"
                    xmlns:ui="clr-namespace:iNKORE.UI.WPF.Modern">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary>
            <ui:CornerRadiusFilterConverter x:Key="TopCornerRadiusFilterConverter"
                                            Filter="Top" />
            <ui:CornerRadiusFilterConverter x:Key="BottomCornerRadiusFilterConverter"
                                            Filter="Bottom" />
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <Thickness x:Key="CommandBarFlyoutAppBarButtonInnerBorderMargin">2</Thickness>

    <Style x:Key="CommandBarFlyoutAppBarButtonStyleBase"
           TargetType="local:AppBarButton">
        <Setter Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource CommandBarFlyoutAppBarButtonBorderBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
        <Setter Property="UseSystemFocusVisuals" Value="{DynamicResource UseSystemFocusVisuals}" />
        <Setter Property="FocusVisualMargin" Value="0,0,0,2" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:AppBarButton">
                    <Grid x:Name="Root"
                          MinWidth="{TemplateBinding MinWidth}"
                          MaxWidth="{TemplateBinding MaxWidth}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ApplicationViewStates">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="ApplicationViewStatesListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="FullSize" />
                                <VisualState x:Name="Compact" />
                                <VisualState x:Name="LabelOnRight" />
                                <VisualState x:Name="LabelCollapsed" />
                                <VisualState x:Name="Overflow" />
                                <VisualState x:Name="OverflowWithToggleButtons" />
                                <VisualState x:Name="OverflowWithMenuIcons" />
                                <VisualState x:Name="OverflowWithToggleButtonsAndMenuIcons" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="CommonStatesListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                                <VisualState x:Name="OverflowNormal" />
                                <VisualState x:Name="OverflowPointerOver" />
                                <VisualState x:Name="OverflowPressed" />
                                <VisualState x:Name="OverflowSubMenuOpened" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="KeyboardAcceleratorTextVisibility">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="KeyboardAcceleratorTextVisibilityListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="KeyboardAcceleratorTextCollapsed" />
                                <VisualState x:Name="KeyboardAcceleratorTextVisible" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FlyoutStates">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="FlyoutStatesListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="NoFlyout" />
                                <VisualState x:Name="HasFlyout" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="AppBarButtonInnerBorder"
                                Margin="{StaticResource CommandBarFlyoutAppBarButtonInnerBorderMargin}"
                                ui:FocusVisualHelper.IsTemplateFocusTarget="True"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}" />

                        <Grid x:Name="ContentRoot">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Viewbox x:Name="ContentViewbox"
                                     Height="16"
                                     HorizontalAlignment="Stretch">
                                <ui:ContentPresenterEx x:Name="Content"
                                                       Content="{TemplateBinding Icon}"
                                                       Foreground="{TemplateBinding Foreground}" />
                            </Viewbox>
                            <TextBlock x:Name="OverflowTextLabel"
                                       Margin="12,0,12,0"
                                       Padding="0,6,0,7"
                                       HorizontalAlignment="Stretch"
                                       VerticalAlignment="Center"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       Foreground="{TemplateBinding Foreground}"
                                       Style="{DynamicResource BodyTextBlockStyle}"
                                       Text="{TemplateBinding Label}"
                                       TextAlignment="Left"
                                       TextWrapping="NoWrap"
                                       Visibility="Collapsed" />
                            <TextBlock x:Name="KeyboardAcceleratorTextLabel"
                                       Grid.Column="1"
                                       MinWidth="34"
                                       Margin="24,0,12,0"
                                       HorizontalAlignment="Right"
                                       VerticalAlignment="Center"
                                       Foreground="{DynamicResource CommandBarFlyoutAppBarButtonKeyboardTextLabelForeground}"
                                       Style="{DynamicResource CaptionTextBlockStyle}"
                                       Text="{TemplateBinding InputGestureText}"
                                       Visibility="Collapsed" />
                            <ui:FontIcon x:Name="SubItemChevron"
                                         Grid.Column="2"
                                         Margin="12,0,12,0"
                                         VerticalAlignment="Center"
                                         FontFamily="{DynamicResource FluentSystemIcons}"
                                         FontSize="12"
                                         Foreground="{DynamicResource CommandBarFlyoutAppBarButtonSubItemChevronForeground}"
                                         Glyph="&#xF2B0;"
                                         Visibility="Collapsed" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--#region ApplicationViewStates-->
                        <!--  Overflow  -->
                        <Trigger SourceName="ApplicationViewStatesListener" Property="CurrentStateName" Value="Overflow">
                            <Setter TargetName="ContentRoot" Property="MinHeight" Value="0" />
                            <Setter TargetName="ContentRoot" Property="Width" Value="NaN" />
                            <Setter TargetName="ContentViewbox" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ContentViewbox" Property="Margin" Value="12,0,12,0" />
                            <Setter TargetName="OverflowTextLabel" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <!--  OverflowWithToggleButtons  -->
                        <Trigger SourceName="ApplicationViewStatesListener" Property="CurrentStateName" Value="OverflowWithToggleButtons">
                            <Setter TargetName="ContentRoot" Property="MinHeight" Value="0" />
                            <Setter TargetName="ContentRoot" Property="Width" Value="NaN" />
                            <Setter TargetName="ContentViewbox" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="OverflowTextLabel" Property="Visibility" Value="Visible" />
                            <Setter TargetName="OverflowTextLabel" Property="Margin" Value="39,0,12,0" />
                        </Trigger>
                        <!--  OverflowWithMenuIcons  -->
                        <Trigger SourceName="ApplicationViewStatesListener" Property="CurrentStateName" Value="OverflowWithMenuIcons">
                            <Setter TargetName="ContentRoot" Property="MinHeight" Value="0" />
                            <Setter TargetName="ContentRoot" Property="Width" Value="NaN" />
                            <Setter TargetName="ContentViewbox" Property="HorizontalAlignment" Value="Left" />
                            <Setter TargetName="ContentViewbox" Property="VerticalAlignment" Value="Center" />
                            <Setter TargetName="ContentViewbox" Property="Width" Value="16" />
                            <Setter TargetName="ContentViewbox" Property="Height" Value="16" />
                            <Setter TargetName="ContentViewbox" Property="Margin" Value="12,0,12,0" />
                            <Setter TargetName="OverflowTextLabel" Property="Visibility" Value="Visible" />
                            <Setter TargetName="OverflowTextLabel" Property="Margin" Value="39,0,12,0" />
                        </Trigger>
                        <!--  OverflowWithToggleButtonsAndMenuIcons  -->
                        <Trigger SourceName="ApplicationViewStatesListener" Property="CurrentStateName" Value="OverflowWithToggleButtonsAndMenuIcons">
                            <Setter TargetName="ContentRoot" Property="MinHeight" Value="0" />
                            <Setter TargetName="ContentRoot" Property="Width" Value="NaN" />
                            <Setter TargetName="ContentViewbox" Property="HorizontalAlignment" Value="Left" />
                            <Setter TargetName="ContentViewbox" Property="VerticalAlignment" Value="Center" />
                            <Setter TargetName="ContentViewbox" Property="Width" Value="16" />
                            <Setter TargetName="ContentViewbox" Property="Height" Value="16" />
                            <Setter TargetName="ContentViewbox" Property="Margin" Value="39,0,12,0" />
                            <Setter TargetName="OverflowTextLabel" Property="Visibility" Value="Visible" />
                            <Setter TargetName="OverflowTextLabel" Property="Margin" Value="67,0,12,0" />
                        </Trigger>
                        <!--#endregion-->
                        <!--#region CommonStates-->
                        <!--  PointerOver  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="PointerOver">
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundPointerOver}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPointerOver}" />
                        </Trigger>
                        <!--  Pressed  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="Pressed">
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundPressed}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPressed}" />
                        </Trigger>
                        <!--  Disabled  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="Disabled">
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundDisabled}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundDisabled}" />
                            <Setter TargetName="OverflowTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundDisabled}" />
                            <Setter TargetName="KeyboardAcceleratorTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundDisabled}" />
                            <Setter TargetName="SubItemChevron" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonSubItemChevronDisabledForeground}" />
                        </Trigger>
                        <!--  OverflowPointerOver  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="OverflowPointerOver">
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundPointerOver}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPointerOver}" />
                            <Setter TargetName="OverflowTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPointerOver}" />
                            <Setter TargetName="KeyboardAcceleratorTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonKeyboardTextLabelForegroundPointerOver}" />
                            <Setter TargetName="SubItemChevron" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonSubItemChevronPointerOverForeground}" />
                        </Trigger>
                        <!--  OverflowPressed  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="OverflowPressed">
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundPressed}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPressed}" />
                            <Setter TargetName="OverflowTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPressed}" />
                            <Setter TargetName="KeyboardAcceleratorTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonKeyboardTextLabelForegroundPressed}" />
                            <Setter TargetName="SubItemChevron" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonSubItemChevronPressedForeground}" />
                        </Trigger>
                        <!--  OverflowSubMenuOpened  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="OverflowSubMenuOpened">
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundPointerOver}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPointerOver}" />
                            <Setter TargetName="OverflowTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPointerOver}" />
                            <Setter TargetName="KeyboardAcceleratorTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonKeyboardTextLabelForegroundPointerOver}" />
                            <Setter TargetName="SubItemChevron" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonSubItemChevronSubMenuOpenedForeground}" />
                        </Trigger>
                        <!--#endregion-->
                        <!--  KeyboardAcceleratorTextVisible  -->
                        <Trigger SourceName="KeyboardAcceleratorTextVisibilityListener" Property="CurrentStateName" Value="KeyboardAcceleratorTextVisible">
                            <Setter TargetName="KeyboardAcceleratorTextLabel" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <!--  HasFlyout  -->
                        <Trigger SourceName="FlyoutStatesListener" Property="CurrentStateName" Value="HasFlyout">
                            <Setter TargetName="SubItemChevron" Property="Visibility" Value="{DynamicResource AppBarButtonHasFlyoutChevronVisibility}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ToolBar.IsOverflowItem" Value="True">
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="Width" Value="NaN" />
                <Setter Property="MinHeight" Value="{DynamicResource MenuFlyoutThemeMinHeight}" />
                <Setter Property="FocusVisualMargin" Value="0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CommandBarFlyoutAppBarButtonStyle"
           BasedOn="{StaticResource CommandBarFlyoutAppBarButtonStyleBase}"
           TargetType="local:AppBarButton" />

    <Style x:Key="CommandBarFlyoutAppBarRepeatButtonStyleBase"
           TargetType="local:AppBarRepeatButton">
        <Setter Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource CommandBarFlyoutAppBarButtonBorderBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
        <Setter Property="UseSystemFocusVisuals" Value="{DynamicResource UseSystemFocusVisuals}" />
        <Setter Property="FocusVisualMargin" Value="0,0,0,2" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:AppBarRepeatButton">
                    <Grid x:Name="Root"
                          MinWidth="{TemplateBinding MinWidth}"
                          MaxWidth="{TemplateBinding MaxWidth}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ApplicationViewStates">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="ApplicationViewStatesListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="FullSize" />
                                <VisualState x:Name="Compact" />
                                <VisualState x:Name="LabelOnRight" />
                                <VisualState x:Name="LabelCollapsed" />
                                <VisualState x:Name="Overflow" />
                                <VisualState x:Name="OverflowWithToggleButtons" />
                                <VisualState x:Name="OverflowWithMenuIcons" />
                                <VisualState x:Name="OverflowWithToggleButtonsAndMenuIcons" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="CommonStatesListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                                <VisualState x:Name="OverflowNormal" />
                                <VisualState x:Name="OverflowPointerOver" />
                                <VisualState x:Name="OverflowPressed" />
                                <VisualState x:Name="OverflowSubMenuOpened" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="KeyboardAcceleratorTextVisibility">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="KeyboardAcceleratorTextVisibilityListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="KeyboardAcceleratorTextCollapsed" />
                                <VisualState x:Name="KeyboardAcceleratorTextVisible" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FlyoutStates">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="FlyoutStatesListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="NoFlyout" />
                                <VisualState x:Name="HasFlyout" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="AppBarButtonInnerBorder"
                                Margin="{StaticResource CommandBarFlyoutAppBarButtonInnerBorderMargin}"
                                ui:FocusVisualHelper.IsTemplateFocusTarget="True"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}" />

                        <Grid x:Name="ContentRoot">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Viewbox x:Name="ContentViewbox"
                                     Height="16"
                                     HorizontalAlignment="Stretch">
                                <ui:ContentPresenterEx x:Name="Content"
                                                       Content="{TemplateBinding Icon}"
                                                       Foreground="{TemplateBinding Foreground}" />
                            </Viewbox>
                            <TextBlock x:Name="OverflowTextLabel"
                                       Margin="12,0,12,0"
                                       Padding="0,6,0,7"
                                       HorizontalAlignment="Stretch"
                                       VerticalAlignment="Center"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       Foreground="{TemplateBinding Foreground}"
                                       Style="{DynamicResource BodyTextBlockStyle}"
                                       Text="{TemplateBinding Label}"
                                       TextAlignment="Left"
                                       TextWrapping="NoWrap"
                                       Visibility="Collapsed" />
                            <TextBlock x:Name="KeyboardAcceleratorTextLabel"
                                       Grid.Column="1"
                                       MinWidth="34"
                                       Margin="24,0,12,0"
                                       HorizontalAlignment="Right"
                                       VerticalAlignment="Center"
                                       Foreground="{DynamicResource CommandBarFlyoutAppBarButtonKeyboardTextLabelForeground}"
                                       Style="{DynamicResource CaptionTextBlockStyle}"
                                       Text="{TemplateBinding InputGestureText}"
                                       Visibility="Collapsed" />
                            <ui:FontIcon x:Name="SubItemChevron"
                                         Grid.Column="2"
                                         Margin="12,0,12,0"
                                         VerticalAlignment="Center"
                                         FontFamily="{DynamicResource FluentSystemIcons}"
                                         FontSize="12"
                                         Foreground="{DynamicResource CommandBarFlyoutAppBarButtonSubItemChevronForeground}"
                                         Glyph="&#xF2B0;"
                                         Visibility="Collapsed" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--#region ApplicationViewStates-->
                        <!--  Overflow  -->
                        <Trigger SourceName="ApplicationViewStatesListener" Property="CurrentStateName" Value="Overflow">
                            <Setter TargetName="ContentRoot" Property="MinHeight" Value="0" />
                            <Setter TargetName="ContentRoot" Property="Width" Value="NaN" />
                            <Setter TargetName="ContentViewbox" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ContentViewbox" Property="Margin" Value="12,0,12,0" />
                            <Setter TargetName="OverflowTextLabel" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <!--  OverflowWithToggleButtons  -->
                        <Trigger SourceName="ApplicationViewStatesListener" Property="CurrentStateName" Value="OverflowWithToggleButtons">
                            <Setter TargetName="ContentRoot" Property="MinHeight" Value="0" />
                            <Setter TargetName="ContentRoot" Property="Width" Value="NaN" />
                            <Setter TargetName="ContentViewbox" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="OverflowTextLabel" Property="Visibility" Value="Visible" />
                            <Setter TargetName="OverflowTextLabel" Property="Margin" Value="39,0,12,0" />
                        </Trigger>
                        <!--  OverflowWithMenuIcons  -->
                        <Trigger SourceName="ApplicationViewStatesListener" Property="CurrentStateName" Value="OverflowWithMenuIcons">
                            <Setter TargetName="ContentRoot" Property="MinHeight" Value="0" />
                            <Setter TargetName="ContentRoot" Property="Width" Value="NaN" />
                            <Setter TargetName="ContentViewbox" Property="HorizontalAlignment" Value="Left" />
                            <Setter TargetName="ContentViewbox" Property="VerticalAlignment" Value="Center" />
                            <Setter TargetName="ContentViewbox" Property="Width" Value="16" />
                            <Setter TargetName="ContentViewbox" Property="Height" Value="16" />
                            <Setter TargetName="ContentViewbox" Property="Margin" Value="12,0,12,0" />
                            <Setter TargetName="OverflowTextLabel" Property="Visibility" Value="Visible" />
                            <Setter TargetName="OverflowTextLabel" Property="Margin" Value="39,0,12,0" />
                        </Trigger>
                        <!--  OverflowWithToggleButtonsAndMenuIcons  -->
                        <Trigger SourceName="ApplicationViewStatesListener" Property="CurrentStateName" Value="OverflowWithToggleButtonsAndMenuIcons">
                            <Setter TargetName="ContentRoot" Property="MinHeight" Value="0" />
                            <Setter TargetName="ContentRoot" Property="Width" Value="NaN" />
                            <Setter TargetName="ContentViewbox" Property="HorizontalAlignment" Value="Left" />
                            <Setter TargetName="ContentViewbox" Property="VerticalAlignment" Value="Center" />
                            <Setter TargetName="ContentViewbox" Property="Width" Value="16" />
                            <Setter TargetName="ContentViewbox" Property="Height" Value="16" />
                            <Setter TargetName="ContentViewbox" Property="Margin" Value="39,0,12,0" />
                            <Setter TargetName="OverflowTextLabel" Property="Visibility" Value="Visible" />
                            <Setter TargetName="OverflowTextLabel" Property="Margin" Value="67,0,12,0" />
                        </Trigger>
                        <!--#endregion-->
                        <!--#region CommonStates-->
                        <!--  PointerOver  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="PointerOver">
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundPointerOver}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPointerOver}" />
                        </Trigger>
                        <!--  Pressed  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="Pressed">
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundPressed}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPressed}" />
                        </Trigger>
                        <!--  Disabled  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="Disabled">
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundDisabled}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundDisabled}" />
                            <Setter TargetName="OverflowTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundDisabled}" />
                            <Setter TargetName="KeyboardAcceleratorTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundDisabled}" />
                            <Setter TargetName="SubItemChevron" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonSubItemChevronDisabledForeground}" />
                        </Trigger>
                        <!--  OverflowPointerOver  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="OverflowPointerOver">
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundPointerOver}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPointerOver}" />
                            <Setter TargetName="OverflowTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPointerOver}" />
                            <Setter TargetName="KeyboardAcceleratorTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonKeyboardTextLabelForegroundPointerOver}" />
                            <Setter TargetName="SubItemChevron" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonSubItemChevronPointerOverForeground}" />
                        </Trigger>
                        <!--  OverflowPressed  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="OverflowPressed">
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundPressed}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPressed}" />
                            <Setter TargetName="OverflowTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPressed}" />
                            <Setter TargetName="KeyboardAcceleratorTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonKeyboardTextLabelForegroundPressed}" />
                            <Setter TargetName="SubItemChevron" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonSubItemChevronPressedForeground}" />
                        </Trigger>
                        <!--  OverflowSubMenuOpened  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="OverflowSubMenuOpened">
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundPointerOver}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPointerOver}" />
                            <Setter TargetName="OverflowTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPointerOver}" />
                            <Setter TargetName="KeyboardAcceleratorTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonKeyboardTextLabelForegroundPointerOver}" />
                            <Setter TargetName="SubItemChevron" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonSubItemChevronSubMenuOpenedForeground}" />
                        </Trigger>
                        <!--#endregion-->
                        <!--  KeyboardAcceleratorTextVisible  -->
                        <Trigger SourceName="KeyboardAcceleratorTextVisibilityListener" Property="CurrentStateName" Value="KeyboardAcceleratorTextVisible">
                            <Setter TargetName="KeyboardAcceleratorTextLabel" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <!--  HasFlyout  -->
                        <Trigger SourceName="FlyoutStatesListener" Property="CurrentStateName" Value="HasFlyout">
                            <Setter TargetName="SubItemChevron" Property="Visibility" Value="{DynamicResource AppBarButtonHasFlyoutChevronVisibility}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ToolBar.IsOverflowItem" Value="True">
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="Width" Value="NaN" />
                <Setter Property="MinHeight" Value="{DynamicResource MenuFlyoutThemeMinHeight}" />
                <Setter Property="FocusVisualMargin" Value="0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CommandBarFlyoutAppBarRepeatButtonStyle"
           BasedOn="{StaticResource CommandBarFlyoutAppBarRepeatButtonStyleBase}"
           TargetType="local:AppBarRepeatButton" />

    <Style x:Key="CommandBarFlyoutAppBarToggleButtonStyleBase"
           TargetType="local:AppBarToggleButton">
        <Setter Property="Background" Value="{DynamicResource CommandBarFlyoutButtonBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource CommandBarFlyoutAppBarButtonBorderBrush}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
        <Setter Property="UseSystemFocusVisuals" Value="{DynamicResource UseSystemFocusVisuals}" />
        <Setter Property="FocusVisualMargin" Value="0,0,0,2" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:AppBarToggleButton">
                    <Border x:Name="Root"
                            MinWidth="{TemplateBinding MinWidth}"
                            MaxWidth="{TemplateBinding MaxWidth}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ApplicationViewStates">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="ApplicationViewStatesListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="FullSize" />
                                <VisualState x:Name="Compact" />
                                <VisualState x:Name="LabelOnRight" />
                                <VisualState x:Name="LabelCollapsed" />
                                <VisualState x:Name="Overflow" />
                                <VisualState x:Name="OverflowWithMenuIcons" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="CommonStatesListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                                <VisualState x:Name="Checked" />
                                <VisualState x:Name="CheckedPointerOver" />
                                <VisualState x:Name="CheckedPressed" />
                                <VisualState x:Name="CheckedDisabled" />
                                <VisualState x:Name="OverflowNormal" />
                                <VisualState x:Name="OverflowPointerOver" />
                                <VisualState x:Name="OverflowPressed" />
                                <VisualState x:Name="OverflowChecked" />
                                <VisualState x:Name="OverflowCheckedPointerOver" />
                                <VisualState x:Name="OverflowCheckedPressed" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="KeyboardAcceleratorTextVisibility">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="KeyboardAcceleratorTextVisibilityListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="KeyboardAcceleratorTextCollapsed" />
                                <VisualState x:Name="KeyboardAcceleratorTextVisible" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Border x:Name="AppBarButtonInnerBorder"
                                    Margin="{StaticResource CommandBarFlyoutAppBarButtonInnerBorderMargin}"
                                    ui:FocusVisualHelper.IsTemplateFocusTarget="True"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}" />

                            <Grid x:Name="ContentRoot">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <TextBlock x:Name="OverflowCheckGlyph"
                                           Margin="15,4,14,4"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Center"
                                           FontFamily="{DynamicResource FluentSystemIconsFilled}"
                                           FontSize="12"
                                           Foreground="{DynamicResource CommandBarFlyoutAppBarButtonForeground}"
                                           Opacity="0"
                                           Text="&#xF296;"
                                           Visibility="Collapsed" />
                                <Viewbox x:Name="ContentViewbox"
                                         Height="16"
                                         HorizontalAlignment="Stretch">
                                    <ui:ContentPresenterEx x:Name="Content"
                                                           Content="{TemplateBinding Icon}"
                                                           Foreground="{TemplateBinding Foreground}" />
                                </Viewbox>
                                <TextBlock x:Name="OverflowTextLabel"
                                           Margin="39,0,12,0"
                                           Padding="0,6,0,7"
                                           HorizontalAlignment="Stretch"
                                           VerticalAlignment="Center"
                                           FontFamily="{TemplateBinding FontFamily}"
                                           Foreground="{TemplateBinding Foreground}"
                                           Style="{DynamicResource BodyTextBlockStyle}"
                                           Text="{TemplateBinding Label}"
                                           TextAlignment="Left"
                                           TextWrapping="NoWrap"
                                           Visibility="Collapsed" />
                                <TextBlock x:Name="KeyboardAcceleratorTextLabel"
                                           Grid.Column="1"
                                           MinWidth="34"
                                           Margin="24,0,12,0"
                                           HorizontalAlignment="Right"
                                           VerticalAlignment="Center"
                                           Foreground="{DynamicResource CommandBarFlyoutAppBarButtonKeyboardTextLabelForeground}"
                                           Style="{DynamicResource CaptionTextBlockStyle}"
                                           Text="{TemplateBinding InputGestureText}"
                                           Visibility="Collapsed" />
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--#region ApplicationViewStates-->
                        <!--  Overflow  -->
                        <Trigger SourceName="ApplicationViewStatesListener" Property="CurrentStateName" Value="Overflow">
                            <Setter TargetName="ContentRoot" Property="MinHeight" Value="0" />
                            <Setter TargetName="ContentViewbox" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="OverflowCheckGlyph" Property="Visibility" Value="Visible" />
                            <Setter TargetName="OverflowTextLabel" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <!--  OverflowWithMenuIcons  -->
                        <Trigger SourceName="ApplicationViewStatesListener" Property="CurrentStateName" Value="OverflowWithMenuIcons">
                            <Setter TargetName="ContentRoot" Property="MinHeight" Value="0" />
                            <Setter TargetName="ContentRoot" Property="Width" Value="NaN" />
                            <Setter TargetName="ContentViewbox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ContentViewbox" Property="HorizontalAlignment" Value="Left" />
                            <Setter TargetName="ContentViewbox" Property="VerticalAlignment" Value="Center" />
                            <Setter TargetName="ContentViewbox" Property="MaxWidth" Value="16" />
                            <Setter TargetName="ContentViewbox" Property="MaxHeight" Value="16" />
                            <Setter TargetName="ContentViewbox" Property="Margin" Value="39,0,12,0" />
                            <Setter TargetName="OverflowCheckGlyph" Property="Visibility" Value="Visible" />
                            <Setter TargetName="OverflowTextLabel" Property="Visibility" Value="Visible" />
                            <Setter TargetName="OverflowTextLabel" Property="Margin" Value="67,0,12,0" />
                        </Trigger>
                        <!--#endregion-->
                        <!--#region CommonStates-->
                        <!--  PointerOver  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="PointerOver">
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundPointerOver}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPointerOver}" />
                        </Trigger>
                        <!--  Pressed  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="Pressed">
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundPressed}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPressed}" />
                        </Trigger>
                        <!--  Disabled  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="Disabled">
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundDisabled}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundDisabled}" />
                            <Setter TargetName="OverflowTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundDisabled}" />
                            <Setter TargetName="KeyboardAcceleratorTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundDisabled}" />
                        </Trigger>
                        <!--  Checked  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="Checked">
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundChecked}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundChecked}" />
                        </Trigger>
                        <!--  CheckedPointerOver  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="CheckedPointerOver">
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundCheckedPointerOver}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundCheckedPointerOver}" />
                        </Trigger>
                        <!--  CheckedPressed  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="CheckedPressed">
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundCheckedPressed}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundCheckedPressed}" />
                        </Trigger>
                        <!--  CheckedDisabled  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="CheckedDisabled">
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundDisabled}" />
                            <Setter TargetName="OverflowCheckGlyph" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundDisabled}" />
                            <Setter TargetName="OverflowTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundDisabled}" />
                            <Setter TargetName="KeyboardAcceleratorTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundDisabled}" />
                            <Setter TargetName="OverflowCheckGlyph" Property="Opacity" Value="1" />
                        </Trigger>
                        <!--  OverflowPointerOver  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="OverflowPointerOver">
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundPointerOver}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPointerOver}" />
                            <Setter TargetName="OverflowTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPointerOver}" />
                            <Setter TargetName="KeyboardAcceleratorTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonKeyboardTextLabelForegroundPointerOver}" />
                        </Trigger>
                        <!--  OverflowPressed  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="OverflowPressed">
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundPressed}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPressed}" />
                            <Setter TargetName="OverflowTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPressed}" />
                            <Setter TargetName="KeyboardAcceleratorTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonKeyboardTextLabelForegroundPressed}" />
                        </Trigger>
                        <!--  OverflowChecked  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="OverflowChecked">
                            <Setter TargetName="OverflowCheckGlyph" Property="Opacity" Value="1" />
                        </Trigger>
                        <!--  OverflowCheckedPointerOver  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="OverflowCheckedPointerOver">
                            <Setter TargetName="OverflowCheckGlyph" Property="Opacity" Value="1" />
                            <Setter TargetName="OverflowCheckGlyph" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPointerOver}" />
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundPointerOver}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPointerOver}" />
                            <Setter TargetName="OverflowTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPointerOver}" />
                            <Setter TargetName="KeyboardAcceleratorTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPointerOver}" />
                        </Trigger>
                        <!--  OverflowCheckedPressed  -->
                        <Trigger SourceName="CommonStatesListener" Property="CurrentStateName" Value="OverflowCheckedPressed">
                            <Setter TargetName="OverflowCheckGlyph" Property="Opacity" Value="1" />
                            <Setter TargetName="OverflowCheckGlyph" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPressed}" />
                            <Setter TargetName="AppBarButtonInnerBorder" Property="Background" Value="{DynamicResource CommandBarFlyoutAppBarButtonBackgroundPressed}" />
                            <Setter TargetName="Content" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPressed}" />
                            <Setter TargetName="OverflowTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPressed}" />
                            <Setter TargetName="KeyboardAcceleratorTextLabel" Property="Foreground" Value="{DynamicResource CommandBarFlyoutAppBarButtonForegroundPressed}" />
                        </Trigger>
                        <!--#endregion-->
                        <!--  KeyboardAcceleratorTextVisible  -->
                        <Trigger SourceName="KeyboardAcceleratorTextVisibilityListener" Property="CurrentStateName" Value="KeyboardAcceleratorTextVisible">
                            <Setter TargetName="KeyboardAcceleratorTextLabel" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ToolBar.IsOverflowItem" Value="True">
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="Width" Value="NaN" />
                <Setter Property="MinHeight" Value="{DynamicResource MenuFlyoutThemeMinHeight}" />
                <Setter Property="FocusVisualMargin" Value="0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CommandBarFlyoutAppBarToggleButtonStyle"
           BasedOn="{StaticResource CommandBarFlyoutAppBarToggleButtonStyleBase}"
           TargetType="local:AppBarToggleButton" />

    <Style x:Key="CommandBarFlyoutCommandBarOverflowPresenterStyle"
           TargetType="primitives:CommandBarOverflowPresenter">
        <Setter Property="Background" Value="{DynamicResource CommandBarFlyoutButtonBackground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="MinWidth" Value="136" />
        <Setter Property="MaxWidth" Value="440" />
        <Setter Property="MaxHeight" Value="480" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="primitives:CommandBarOverflowPresenter">
                    <Border x:Name="LayoutRoot"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="DisplayModeStates">
                                <VisualState x:Name="DisplayModeDefault" />
                                <VisualState x:Name="FullWidthOpenDown" />
                                <VisualState x:Name="FullWidthOpenUp" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}" />
                            <ui:ScrollViewerEx Margin="{TemplateBinding BorderThickness}"
                                               Padding="0,4,0,4"
                                               Content="{TemplateBinding Content}"
                                               HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                               VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="primitives:CommandBarFlyoutToolBar">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="primitives:CommandBarFlyoutToolBar">
                    <Border x:Name="LayoutRoot"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            SnapsToDevicePixels="True">
                        <Border.Resources>
                            <primitives:CommandBarFlyoutCommandBarTemplateSettingsProxy x:Key="TemplateSettingsProxy"
                                                                                        FlyoutTemplateSettings="{Binding FlyoutTemplateSettings, RelativeSource={RelativeSource TemplatedParent}, Mode=OneTime}" />
                            <Style BasedOn="{StaticResource CommandBarFlyoutAppBarButtonStyle}"
                                   TargetType="local:AppBarButton" />
                            <Style BasedOn="{StaticResource CommandBarFlyoutAppBarRepeatButtonStyle}"
                                   TargetType="local:AppBarRepeatButton" />
                            <Style BasedOn="{StaticResource CommandBarFlyoutAppBarToggleButtonStyle}"
                                   TargetType="local:AppBarToggleButton" />
                            <!--
                                We'll only provide opening and closing storyboards for RS5 and above,
                                because we aren't able to suppress the default flyout open/close animations
                                on earlier versions of the OS than that.
                            -->
                            <Storyboard x:Key="OpeningStoryboard"
                                        FillBehavior="Stop">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterContentRootClipTransform"
                                                               Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.OpenAnimationStartPosition}" />
                                    <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1"
                                                          KeyTime="0:0:0.300"
                                                          Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.OpenAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterOverflowContentRootClipTransform"
                                                               Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.OpenAnimationStartPosition}" />
                                    <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1"
                                                          KeyTime="0:0:0.300"
                                                          Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.OpenAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <!--
                                The closing animation plays the opening animation in reverse and then snaps to a position where
                                the clip will fully hide the flyout, in preparation for closing the flyout.
                                As such, it's expected and normal that we use OpenAnimation* template settings properties
                                in the closing animation.
                            -->
                            <Storyboard x:Key="ClosingStoryboard">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterContentRootClipTransform"
                                                               Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.OpenAnimationEndPosition}" />
                                    <SplineDoubleKeyFrame KeySpline="0.7,0 1,0.5"
                                                          KeyTime="0:0:0.150"
                                                          Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.OpenAnimationStartPosition}" />
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.151"
                                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.CloseAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterOverflowContentRootClipTransform"
                                                               Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.OpenAnimationEndPosition}" />
                                    <SplineDoubleKeyFrame KeySpline="0.7,0 1,0.5"
                                                          KeyTime="0:0:0.150"
                                                          Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.OpenAnimationStartPosition}" />
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.151"
                                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.CloseAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="CollapsedToExpandedUpStoryboard">
                                <DoubleAnimation Storyboard.TargetName="OuterOverflowContentRoot"
                                                 Storyboard.TargetProperty="Opacity"
                                                 To="1"
                                                 Duration="0" />
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot"
                                                               Storyboard.TargetProperty="Width">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.ExpandedWidth}" />
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MoreButtonTransform"
                                                               Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionMoreButtonAnimationStartPosition}" />
                                    <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1"
                                                          KeyTime="0:0:0.300"
                                                          Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentRootClipTransform"
                                                               Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationStartPosition}" />
                                    <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1"
                                                          KeyTime="0:0:0.300"
                                                          Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClipTransform"
                                                               Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationStartPosition}" />
                                    <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1"
                                                          KeyTime="0:0:0.300"
                                                          Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClipTransform"
                                                               Storyboard.TargetProperty="Y">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.ExpandUpAnimationStartPosition}" />
                                    <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1"
                                                          KeyTime="0:0:0.300"
                                                          Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.ExpandUpAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot"
                                                               Storyboard.TargetProperty="CornerRadius">
                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                            Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PrimaryItemsRoot"
                                                               Storyboard.TargetProperty="CornerRadius">
                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                            Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterOverflowContentRoot"
                                                               Storyboard.TargetProperty="CornerRadius">
                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                            Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SecondaryItemsControl"
                                                               Storyboard.TargetProperty="CornerRadius">
                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                            Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="ExpandedUpToCollapsedStoryboard"
                                        FillBehavior="Stop">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterOverflowContentRoot"
                                                               Storyboard.TargetProperty="Opacity">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                            Value="1" />
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.151"
                                                            Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot"
                                                               Storyboard.TargetProperty="Width">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.ExpandedWidth}" />
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MoreButtonTransform"
                                                               Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                            Value="0" />
                                    <SplineDoubleKeyFrame KeySpline="0.7,0 1,0.5"
                                                          KeyTime="0:0:0.150"
                                                          Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionMoreButtonAnimationStartPosition}" />
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.151"
                                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionMoreButtonAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentRootClipTransform"
                                                               Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationEndPosition}" />
                                    <SplineDoubleKeyFrame KeySpline="0.7,0 1,0.5"
                                                          KeyTime="0:0:0.150"
                                                          Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationStartPosition}" />
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.151"
                                                            Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClipTransform"
                                                               Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationEndPosition}" />
                                    <SplineDoubleKeyFrame KeySpline="0.7,0 1,0.5"
                                                          KeyTime="0:0:0.150"
                                                          Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationStartPosition}" />
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.151"
                                                            Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClipTransform"
                                                               Storyboard.TargetProperty="Y">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.ExpandUpAnimationEndPosition}" />
                                    <SplineDoubleKeyFrame KeySpline="0.7,0 1,0.5"
                                                          KeyTime="0:0:0.150"
                                                          Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.ExpandUpAnimationStartPosition}" />
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.151"
                                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.ExpandUpAnimationHoldPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="CollapsedToExpandedDownStoryboard">
                                <DoubleAnimation Storyboard.TargetName="OuterOverflowContentRoot"
                                                 Storyboard.TargetProperty="Opacity"
                                                 To="1"
                                                 Duration="0" />
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot"
                                                               Storyboard.TargetProperty="Width">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.ExpandedWidth}" />
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MoreButtonTransform"
                                                               Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionMoreButtonAnimationStartPosition}" />
                                    <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1"
                                                          KeyTime="0:0:0.300"
                                                          Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentRootClipTransform"
                                                               Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationStartPosition}" />
                                    <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1"
                                                          KeyTime="0:0:0.300"
                                                          Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClipTransform"
                                                               Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationStartPosition}" />
                                    <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1"
                                                          KeyTime="0:0:0.300"
                                                          Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClipTransform"
                                                               Storyboard.TargetProperty="Y">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.ExpandDownAnimationStartPosition}" />
                                    <SplineDoubleKeyFrame KeySpline="0.1,0.9 0.2,1"
                                                          KeyTime="0:0:0.300"
                                                          Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.ExpandDownAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot"
                                                               Storyboard.TargetProperty="CornerRadius">
                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                            Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PrimaryItemsRoot"
                                                               Storyboard.TargetProperty="CornerRadius">
                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                            Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterOverflowContentRoot"
                                                               Storyboard.TargetProperty="CornerRadius">
                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                            Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SecondaryItemsControl"
                                                               Storyboard.TargetProperty="CornerRadius">
                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                            Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="ExpandedDownToCollapsedStoryboard"
                                        FillBehavior="Stop">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterOverflowContentRoot"
                                                               Storyboard.TargetProperty="Opacity">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                            Value="1" />
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.151"
                                                            Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot"
                                                               Storyboard.TargetProperty="Width">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.ExpandedWidth}" />
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MoreButtonTransform"
                                                               Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                            Value="0" />
                                    <SplineDoubleKeyFrame KeySpline="0.7,0 1,0.5"
                                                          KeyTime="0:0:0.150"
                                                          Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionMoreButtonAnimationStartPosition}" />
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.151"
                                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionMoreButtonAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentRootClipTransform"
                                                               Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationEndPosition}" />
                                    <SplineDoubleKeyFrame KeySpline="0.7,0 1,0.5"
                                                          KeyTime="0:0:0.150"
                                                          Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationStartPosition}" />
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.151"
                                                            Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClipTransform"
                                                               Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationEndPosition}" />
                                    <SplineDoubleKeyFrame KeySpline="0.7,0 1,0.5"
                                                          KeyTime="0:0:0.150"
                                                          Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationStartPosition}" />
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.151"
                                                            Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClipTransform"
                                                               Storyboard.TargetProperty="Y">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.ExpandDownAnimationEndPosition}" />
                                    <SplineDoubleKeyFrame KeySpline="0.7,0 1,0.5"
                                                          KeyTime="0:0:0.150"
                                                          Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.ExpandDownAnimationStartPosition}" />
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.151"
                                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.ExpandDownAnimationHoldPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="ExpandedUpStoryboard">
                                <DoubleAnimation Storyboard.TargetName="MoreButtonTransform"
                                                 Storyboard.TargetProperty="X"
                                                 To="0"
                                                 Duration="0" />
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentRootClipTransform"
                                                               Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0"
                                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClipTransform"
                                                               Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0"
                                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClipTransform"
                                                               Storyboard.TargetProperty="Y">
                                    <DiscreteDoubleKeyFrame KeyTime="0"
                                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.ExpandUpAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="ExpandedDownStoryboard">
                                <DoubleAnimation Storyboard.TargetName="MoreButtonTransform"
                                                 Storyboard.TargetProperty="X"
                                                 To="0"
                                                 Duration="0" />
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentRootClipTransform"
                                                               Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0"
                                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClipTransform"
                                                               Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0"
                                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OverflowContentRootClipTransform"
                                                               Storyboard.TargetProperty="Y">
                                    <DiscreteDoubleKeyFrame KeyTime="0"
                                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.ExpandDownAnimationEndPosition}" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </Border.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition Storyboard="{StaticResource CollapsedToExpandedUpStoryboard}"
                                                      From="Collapsed"
                                                      To="ExpandedUp" />
                                    <VisualTransition Storyboard="{StaticResource ExpandedUpToCollapsedStoryboard}"
                                                      From="ExpandedUp"
                                                      To="Collapsed" />
                                    <VisualTransition Storyboard="{StaticResource CollapsedToExpandedDownStoryboard}"
                                                      From="Collapsed"
                                                      To="ExpandedDown" />
                                    <VisualTransition Storyboard="{StaticResource ExpandedDownToCollapsedStoryboard}"
                                                      From="ExpandedDown"
                                                      To="Collapsed" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Collapsed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="OuterOverflowContentRoot"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ExpandedUp"
                                             Storyboard="{StaticResource ExpandedUpStoryboard}" />
                                <VisualState x:Name="ExpandedDown"
                                             Storyboard="{StaticResource ExpandedDownStoryboard}" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AvailableCommandsStates">
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="AvailableCommandsStatesListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="BothCommands" />
                                <VisualState x:Name="PrimaryCommandsOnly" />
                                <VisualState x:Name="SecondaryCommandsOnly" />
                            </VisualStateGroup>
                            <VisualStateGroup>
                                <ui:VisualStateGroupListener.Listener>
                                    <ui:VisualStateGroupListener x:Name="CombinedStatesListener" />
                                </ui:VisualStateGroupListener.Listener>
                                <VisualState x:Name="Default" />
                                <VisualState x:Name="ExpandedUpWithPrimaryCommands" />
                                <VisualState x:Name="ExpandedDownWithPrimaryCommands" />
                                <VisualState x:Name="ExpandedUpWithoutPrimaryCommands" />
                                <VisualState x:Name="ExpandedDownWithoutPrimaryCommands" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <VisualStateManager.CustomVisualStateManager>
                            <ui:SimpleVisualStateManager />
                        </VisualStateManager.CustomVisualStateManager>
                        <Border x:Name="OuterContentRoot"
                                Height="{TemplateBinding Height}"
                                MinWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.CurrentWidth}"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="Top"
                                CornerRadius="{Binding ElementName=LayoutRoot, Path=CornerRadius}">
                            <Border.Clip>
                                <RectangleGeometry x:Name="OuterContentRootClip"
                                                   Rect="{Binding Source={StaticResource TemplateSettingsProxy}, Path=FlyoutTemplateSettings.ContentClipRect}">
                                    <RectangleGeometry.Transform>
                                        <TranslateTransform x:Name="OuterContentRootClipTransform" />
                                    </RectangleGeometry.Transform>
                                </RectangleGeometry>
                            </Border.Clip>
                            <Grid x:Name="ContentRoot"
                                  Background="{TemplateBinding Background}">
                                <Grid.Clip>
                                    <RectangleGeometry x:Name="ContentRootClip"
                                                       Rect="{Binding Source={StaticResource TemplateSettingsProxy}, Path=FlyoutTemplateSettings.ContentClipRect}">
                                        <RectangleGeometry.Transform>
                                            <!--
                                                If you have a value set by a binding and then animate that value,
                                                the animation will clear the binding.  Because of that, we need to have
                                                two translate transforms - one that we bind to a property,
                                                and another that we can animate.
                                            -->
                                            <TransformGroup>
                                                <TranslateTransform X="{Binding Source={StaticResource TemplateSettingsProxy}, Path=FlyoutTemplateSettings.WidthExpansionDelta}" />
                                                <TranslateTransform x:Name="ContentRootClipTransform" />
                                            </TransformGroup>
                                        </RectangleGeometry.Transform>
                                    </RectangleGeometry>
                                </Grid.Clip>
                                <Border x:Name="PrimaryItemsRoot"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{TemplateBinding CornerRadius}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <primitives:CommandBarPanel x:Name="PART_ToolBarPanel"
                                                                    Grid.Column="0"
                                                                    Height="40"
                                                                    Margin="3,3,0,3"
                                                                    HorizontalAlignment="Left"
                                                                    IsItemsHost="true"
                                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        <ToggleButton x:Name="MoreButton"
                                                      Grid.Column="1"
                                                      ClickMode="Press"
                                                      Foreground="{TemplateBinding Foreground}"
                                                      IsChecked="{Binding Path=IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                      IsEnabled="{TemplateBinding HasOverflowItems}"
                                                      IsTabStop="False"
                                                      Style="{DynamicResource CommandBarFlyoutEllipsisButtonStyle}"
                                                      Visibility="{TemplateBinding EffectiveOverflowButtonVisibility}">
                                            <ToggleButton.RenderTransform>
                                                <TranslateTransform x:Name="MoreButtonTransform" />
                                            </ToggleButton.RenderTransform>
                                            <ui:FontIcon x:Name="EllipsisIcon"
                                                         HorizontalAlignment="Center"
                                                         VerticalAlignment="Center"
                                                         FontFamily="{DynamicResource FluentSystemIcons}"
                                                         FontSize="16"
                                                         Glyph="&#xE827;" />
                                        </ToggleButton>
                                    </Grid>
                                </Border>
                                <ui:PopupEx x:Name="OverflowPopup"
                                            AllowsTransparency="true"
                                            Focusable="false"
                                            IsOpen="{Binding Path=IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                            Placement="Bottom"
                                            PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                            StaysOpen="false">
                                    <Border x:Name="OuterOverflowContentRoot"
                                            Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.ExpandedWidth}">
                                        <Border.Clip>
                                            <RectangleGeometry x:Name="OuterOverflowContentRootClip"
                                                               Rect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.OverflowContentClipRect}">
                                                <RectangleGeometry.Transform>
                                                    <TranslateTransform x:Name="OuterOverflowContentRootClipTransform" />
                                                </RectangleGeometry.Transform>
                                            </RectangleGeometry>
                                        </Border.Clip>
                                        <Border x:Name="OverflowContentRoot"
                                                HorizontalAlignment="Stretch"
                                                Background="{TemplateBinding Background}"
                                                CornerRadius="{Binding ElementName=OuterOverflowContentRoot, Path=CornerRadius}">
                                            <Border.Clip>
                                                <RectangleGeometry x:Name="OverflowContentRootClip"
                                                                   Rect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.OverflowContentClipRect}">
                                                    <RectangleGeometry.Transform>
                                                        <!--
                                                            If you have a value set by a binding and then animate that value,
                                                            the animation will clear the binding.  Because of that, we need to have
                                                            two translate transforms - one that we bind to a property,
                                                            and another that we can animate.
                                                        -->
                                                        <TransformGroup>
                                                            <TranslateTransform X="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FlyoutTemplateSettings.WidthExpansionDelta}" />
                                                            <TranslateTransform x:Name="OverflowContentRootClipTransform" />
                                                        </TransformGroup>
                                                    </RectangleGeometry.Transform>
                                                </RectangleGeometry>
                                            </Border.Clip>
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>
                                                <primitives:CommandBarOverflowPresenter x:Name="SecondaryItemsControl"
                                                                                        Grid.Row="1"
                                                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                                                        BorderThickness="{DynamicResource CommandBarFlyoutBorderThemeThickness}"
                                                                                        IsTabStop="False"
                                                                                        Style="{TemplateBinding OverflowPresenterStyle}">
                                                    <primitives:CommandBarOverflowPanel x:Name="PART_ToolBarOverflowPanel"
                                                                                        FocusVisualStyle="{x:Null}"
                                                                                        Focusable="False"
                                                                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                                                                        KeyboardNavigation.TabNavigation="Once"
                                                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                </primitives:CommandBarOverflowPresenter>
                                            </Grid>
                                        </Border>
                                    </Border>
                                </ui:PopupEx>
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--  Disabled  -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="EllipsisIcon" Property="Foreground" Value="{DynamicResource CommandBarEllipsisIconForegroundDisabled}" />
                        </Trigger>
                        <!--  PrimaryCommandsOnly  -->
                        <Trigger SourceName="AvailableCommandsStatesListener" Property="CurrentStateName" Value="PrimaryCommandsOnly">
                            <Setter TargetName="OverflowContentRoot" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <!--  SecondaryCommandsOnly  -->
                        <Trigger SourceName="AvailableCommandsStatesListener" Property="CurrentStateName" Value="SecondaryCommandsOnly">
                            <Setter TargetName="PrimaryItemsRoot" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="OverflowPopup" Property="Placement" Value="{x:Static PlacementMode.Relative}" />
                            <Setter TargetName="PART_ToolBarOverflowPanel" Property="Focusable" Value="True" />
                        </Trigger>
                        <!--  ExpandedUpWithPrimaryCommands  -->
                        <Trigger SourceName="CombinedStatesListener" Property="CurrentStateName" Value="ExpandedUpWithPrimaryCommands">
                            <Setter TargetName="SecondaryItemsControl" Property="BorderThickness" Value="{DynamicResource CommandBarFlyoutBorderUpThemeThickness}" />
                            <Setter TargetName="LayoutRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                            <Setter TargetName="PrimaryItemsRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                            <Setter TargetName="OuterOverflowContentRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                            <Setter TargetName="SecondaryItemsControl" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                        </Trigger>
                        <!--  ExpandedDownWithPrimaryCommands  -->
                        <Trigger SourceName="CombinedStatesListener" Property="CurrentStateName" Value="ExpandedDownWithPrimaryCommands">
                            <Setter TargetName="SecondaryItemsControl" Property="BorderThickness" Value="{DynamicResource CommandBarFlyoutBorderDownThemeThickness}" />
                            <Setter TargetName="LayoutRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                            <Setter TargetName="PrimaryItemsRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
                            <Setter TargetName="OuterOverflowContentRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                            <Setter TargetName="SecondaryItemsControl" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
                        </Trigger>
                        <!--  ExpandedUpWithoutPrimaryCommands  -->
                        <Trigger SourceName="CombinedStatesListener" Property="CurrentStateName" Value="ExpandedUpWithoutPrimaryCommands">
                            <Setter TargetName="SecondaryItemsControl" Property="BorderThickness" Value="{DynamicResource CommandBarFlyoutBorderThemeThickness}" />
                            <Setter TargetName="LayoutRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PrimaryItemsRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="OuterOverflowContentRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="SecondaryItemsControl" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <!--  ExpandedDownWithoutPrimaryCommands  -->
                        <Trigger SourceName="CombinedStatesListener" Property="CurrentStateName" Value="ExpandedDownWithoutPrimaryCommands">
                            <Setter TargetName="SecondaryItemsControl" Property="BorderThickness" Value="{DynamicResource CommandBarFlyoutBorderThemeThickness}" />
                            <Setter TargetName="LayoutRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PrimaryItemsRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="OuterOverflowContentRoot" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="SecondaryItemsControl" Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultCommandBarFlyoutCommandBarStyle"
           TargetType="primitives:CommandBarFlyoutCommandBar">
        <Setter Property="Background" Value="{DynamicResource CommandBarFlyoutBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource CommandBarFlyoutForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource CommandBarFlyoutBorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource CommandBarFlyoutBorderThemeThickness}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="DefaultLabelPosition" Value="Collapsed" />
        <Setter Property="MaxWidth" Value="440" />
        <Setter Property="Height" Value="48" />
        <Setter Property="IsDynamicOverflowEnabled" Value="True" />
        <Setter Property="CommandBarOverflowPresenterStyle" Value="{StaticResource CommandBarFlyoutCommandBarOverflowPresenterStyle}" />
        <Setter Property="CornerRadius" Value="{DynamicResource OverlayCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="primitives:CommandBarFlyoutCommandBar">
                    <primitives:CommandBarFlyoutToolBar x:Name="PART_ToolBar"
                                                        Height="{TemplateBinding Height}"
                                                        MaxWidth="{TemplateBinding MaxWidth}"
                                                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                        Background="{TemplateBinding Background}"
                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                        CornerRadius="{TemplateBinding CornerRadius}"
                                                        DefaultLabelPosition="{TemplateBinding DefaultLabelPosition}"
                                                        Foreground="{TemplateBinding Foreground}"
                                                        IsDynamicOverflowEnabled="{TemplateBinding IsDynamicOverflowEnabled}"
                                                        IsOverflowOpen="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                                        IsTabStop="{TemplateBinding IsTabStop}"
                                                        OverflowButtonVisibility="{TemplateBinding OverflowButtonVisibility}"
                                                        OverflowPresenterStyle="{TemplateBinding CommandBarOverflowPresenterStyle}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultCommandBarFlyoutCommandBarStyle}"
           TargetType="primitives:CommandBarFlyoutCommandBar" />

</ResourceDictionary>